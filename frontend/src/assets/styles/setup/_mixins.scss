/* Breakpoint mixins */

@mixin for-mobile-layout {
  @media (max-width: calc($mobile-breakpoint + 40px)) {
    @content;
  }
}

@mixin for-narrow-layout {
  @media (min-width: calc($mobile-breakpoint + 40px)) {
    @content;
  }
}

@mixin for-normal-layout {
  @media (min-width: calc($narrow-breakpoint + 40px)) {
    @content;
  }
}

@mixin for-wide-layout {
  @media (min-width: calc($normal-breakpoint + 40px)) {
    @content;
  }
}

@mixin members() {
  height: rem(26px);
  width: rem(26px);
  border-radius: 50%;
}

@mixin hover-sidebar() {
  background-color: rgba(0, 0, 0, .6);
  border-radius: 10px;
  cursor: pointer;
}

@mixin member-img($bgColor , $txtColor , $imgSize , $countSize) {
  >* {
    @include members;
  }

  .member-img1 {
    margin-right: -5px;
    margin-left: 0;
    width: $imgSize;
    height: $imgSize;
  }

  .member-img2 {
    margin-left: -5px;
    margin-right: -5px;
    height: $imgSize;
    width: $imgSize;
  }

  .show-more-members {
    @include center-flex();
    font-size: rem(14px);
    background-color: $bgColor;
    margin-left: -5px;
    border: 1px solid $border-color;
    padding: em(4px);
    text-align: center;
    width: $countSize;
    height: $countSize;
    color: $txtColor;
  }
}

@mixin task-modal-position() {
  position: absolute;
  z-index: 2;
  top: 21px;
  left: -25px;
}

@mixin login-logout-modal-position() {
  position: sticky;
  z-index: 2;
  left: 60px;
  bottom: 15px;
}

@mixin triangle-icon() {
  color: white;
  position: relative;
  right: -85px;
  bottom: -11px;
  z-index: 2;
}

@mixin center-absolute() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin center-flex() {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin menu-modal() {
  background-color: $app-bg;
  border-radius: $spacing-small;
  display: flex;
  flex-direction: column;
  position: absolute;
  top: 40px;
  color: $primary-text-color;
  font-size: rem(14px);
  z-index: 10;
  padding: $spacing-small;
  box-shadow: -3px 4px 14px rgb(0 0 0 / 20%);
  border: 1px solid darken($border-color , 20%);

  >* {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: $spacing-xs $spacing-small;

    &:hover:not(.color-palette) {
      background-color: $workspace-hover;
      border-radius: $spacing-small;
    }
  }
}

@mixin empty-div() {
    width: 100%;
    border-bottom: 2px solid darken($border-color , 20%);
    &:first-child {
        border-top: 2px solid darken($border-color , 20%);
  }
}